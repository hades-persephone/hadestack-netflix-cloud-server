spring:
  kafka:
    bootstrap-servers:
      - ${KAFKA_BROKER_1:broker1:9092}
      - ${KAFKA_BROKER_2:broker2:9092}
      - ${KAFKA_BROKER_3:broker3:9092}
    client-id: ${spring.application.name:kafka-client}

    producer:
      acks: ${KAFKA_PRODUCER_ALL:all}
      retries: ${KAFKA_PRODUCER_RETRIES:2147483647}

      batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:65536}
      buffer-memory: ${KAFKA_PRODUCER_BUFFER_MEMORY:67108864}

      compression-type: ${KAFKA_PRODUCER_COMPRESSION:lz4}

      key-serializer: ${KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
      value-serializer: ${KAFKA_PRODUCER)VALUE)SERIALIZER:org.apache.springframework.kafka.support.serializer.JsonSerializer}

      transaction-id-prefix: ${KAFKA_PRODUCER_TRANSACTION_PREFIX:${spring.application.name}-tx-}
      properties:
        enable.idempotence: ${KAFKA_PRODUCER_IDEMPOTENCE:true}
        linger.ms: ${KAFKA_PRODUCER_LINGER_MS:100}
        request-timeout-ms: ${KAFKA_PRODUCER_REQUEST_TIMEOUT:60000}
        delivery-timeout-ms: ${KAFKA_PRODUCER_DELIVERY_TIMEOUT:300000}
        max.in.flight.request.per.connection: ${KAFKA_PRODUCER_MAX_IN_FLIGHT:5}
        retry.backoff.ms: ${KAFKA_PRODUCER_RETRY_BACKOFF:1000}
        reconnect.backoff.ms: ${KAFKA_PRODUCER_RECONNECT_BACKOFF:1000}
        reconnect.backoff.max.ms: ${KAFKA_PRODUCER_RECONNECT_BACKOFF_MAX:10000}

        connections.max.idle.ms: ${KAFKA_PRODUCER_CONN_MAX_IDLE:600000}
        metadata.max.age.ms: ${KAFKA_PRODUCER_METADATA_MAX_AGE:300000}

        spring.json.add.type.header: ${KAFKA_JSON_ADD_TYPE_HEADERS:false}
        spring.json.type.mapping: ${KAFKA_JSON_TYPE_MAPPING:}

    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:${spring.application.name}-consumer-group}
      client-id: ${KAFKA_CONSUMER_CLIENT_ID:${spring.application.name}-consumer}

      enable-auto-commit: ${KAFKA_CONSUMER_AUTO_COMMIT:false}
      auto-commit-interval: ${KAFKA_CONSUMER_AUTO_COMMIT_INTERVAL:5000}

      auto-offset-reset: ${KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
      heartbeat-interval: ${KAFKA_CONSUMER_HEARTBEAT_INTERVAL:10000}

      fetch-min-size: ${KAFKA_CONSUMER_FETCH_MIN_SIZE:50000}
      fetch-max-wait: ${KAFKA_CONSUMER_FETCH_MAX_WAIT:500}
      max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:1000}
      max-poll-interval: ${KAFKA_CONSUMER_MAX_POLL_INTERVAL:600000}

      isolation-level: ${KAFKA_CONSUMER_ISOLATION_LEVEL:read_commited}

      key-deserializer: ${KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
      value-deserializer: ${KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.JsonDeserializer}

      properties:
        connections.max.idle.ms: ${KAFKA_CONSUMER_CONN_MAX_IDLE:600000}
        reconnect.backoff.ms: ${KAFKA_CONSUMER_RECONNECT_BACKOFF:1000}
        reconnect.backoff.max.ms: ${KAFKA_CONSUMER_RECONNECT_BACKOFF_MAX:10000}
        metadata.max.age.ms: ${KAFKA_CONSUMER_METADATA_MAX_AGE:300000}

        partition.assignment.strategy: ${KAFKA_CONSUMER_ASSIGNMENT_STRATEGY:org.apache.kafka.clients.consumer.CooperativeStickyAssignor}
        request.timeout.ms: ${KAFKA_CONSUMER_REQUEST_TIMEOUT:40000}
        default.api.timeout.ms: ${KAFKA_CONSUMER_API_TIMEOUT:60000}

        spring.json.add.type.header: ${KAFKA_JSON_ADD_TYPE_HEADERS:false}


logging:
  level:
    org.apache.kafka: ${KAFKA_LOG_LEVEL:INFO}
    org.springframework.kafka: ${KAFKA_SPRING_LOG_LEVEL:INFO}
    org.springframework.kafka.listener: ${KAFKA_LISTENER_LOG_LEVEL:INFO}
    org.springframework.kafka.core: ${KAFKA_CORE_LOG_LEVEL:INFO}
    org.springframework.kafka.config: ${KAFKA_CONFIG_LOG_LEVEL:INFO}
    org.springframework.kafka.transaction: ${KAFKA_TRANSACTION_LOG_LEVEL:INFO}
  pattern:
    console: ${KAFKA_LOG_PATTERN:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,metrics,info,kafka,prometheus}
      base-path: ${MANAGEMENT_BASE_PATH:/actuator}
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_SHOW_DETAILS:always}
      show-components: ${MANAGEMENT_HEALTH_SHOW_COMPONENTS:always}
      probes:
        enabled: ${MANAGEMENT_HEALTH_PROBE:true}
    kafka:
      enabled: ${MANAGEMENT_HEALTH_ENABLED:true}